---
# MAINTAINER louis.hong@junhsue.com
# 雅集 e-mall/api 后端部署
- hosts: yj-back
  remote_user: root
  tasks:  
  - name: Create a directory if it does not exist
    file:
        path: /usr/local/e-mall/api
        state: directory
        mode: '0755'
  - name: copy and replace version the startapi.j2 to nodes
    template:
        src: /opt/playbook/devops/tpl/startapi.t2
        dest: /usr/local/e-mall/api/startapi.sh
        mode: "u=rwx,g=r,o=r"

  - name: copy api jar  to nodes
    copy:
        src: /opt/playbook/devops/weimall/weimall-api-single-{{version}}.jar
        dest: /usr/local/e-mall/api/weimall-api-single-{{version}}.jar

  - name: extra config file to confi directory
    shell: "cd /usr/local/e-mall/api && unzip -o -j weimall-api-single-{{version}}.jar  BOOT-INF/classes/application-prod.yml -d config/ "

# 获取上次jar包运行的pid
  - name: get pid of weimall-api last time
    shell: "ps -ef | grep -v grep | grep -w [w]eimall-api-single | awk '{print $2}'"
    register: running_processes

# 发送停止运行信号
  - name: Kill running processes
    shell: "kill {{ item }}"
    with_items: "{{ running_processes.stdout_lines }}"

# 等待60s钟，确认获取的到的pid是否都停止运行
  - wait_for:
      path: "/proc/{{ item }}/status"
      state: absent
      timeout: 60
    with_items: "{{ running_processes.stdout_lines }}"
    ignore_errors: yes
    register: killed_processes
# 强制杀死，未停止运行的进程
  - name: Force kill stuck processes
    shell: "kill -9 {{ item }}"
    with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"

# 启动新的jar包
  - name: start weimall-api
    shell: "cd /usr/local/e-mall/api && ./startapi.sh"
  - name: health check
    shell: "sleep 50 \
    && curl -L -o /dev/null --connect-timeout 5 -s -w %{http_code} http://localhost:8888/apis/version"
