---
# MAINTAINER louis.hong@junhsue.com
# 增加三个端口, 同项目部署.
- hosts: yj-back
  remote_user: root
  tasks:
    - name: Create a directory if it does not exist
      shell: "test -d /usr/local/e-mall/{{item}} || mkdir /usr/local/e-mall/{{item}}/config -p"
      with_items:
        - api
        - api1
        - api2
    - name: copy and replace version the startapi.j2 to nodes
      template:
        src: /opt/playbook/devops/tpl/start{{item}}.t2
        dest: /usr/local/e-mall/{{item}}/startapi.sh
        mode: "u=rwx,g=r,o=r"
      with_items:
        - api
        - api1
        - api2

    - name: copy api jar  to nodes
      copy:
        src: /opt/playbook/devops/weimall/weimall-api-single-{{version}}.jar
        dest: /usr/local/e-mall/{{item}}/weimall-api-single-{{version}}-8888.jar
      with_items:
        - api
        - api1
        - api2

    - name: extra config file to confi directory
      # shell: "cd /usr/local/e-mall/api && unzip -o -j weimall-api-single-{{version}}.jar  BOOT-INF/classes/application-prod.yml -d config/ "
      copy:
        src: /opt/playbook/devops/tpl/application-prod.yml
        dest: /usr/local/e-mall/{{item}}/config/application-prod.yml
      with_items:
        - api
        - api1
        - api2
    - name: sed port
      replace: dest=/usr/local/e-mall/{{item.name}}/config/application-prod.yml regexp="8888" replace="{{item.port}}"
      with_items:
        - { name: 'api1', port: '22332' }
        - { name: 'api2', port: '22333' }

    # 获取上次jar包运行的pid
    - name: get pid of weimall-api last time
      shell: "ps -ef | grep -v grep | grep -E [w]eimall-api-single | awk '{print $2}'"
      register: running_processes

    # 发送停止运行信号
    - name: Kill running processes
      shell: "kill {{ item }}"
      with_items: "{{ running_processes.stdout_lines }}"

    # 等待60s钟，确认获取的到的pid是否都停止运行
    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
        timeout: 60
      with_items: "{{ running_processes.stdout_lines }}"
      ignore_errors: yes
      register: killed_processes
    # 强制杀死，未停止运行的进程
    - name: Force kill stuck processes
      shell: "kill -9 {{ item }}"
      with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"

    # 启动新的jar包
    - name: start weimall-api
      shell: "sleep 5s && cd /usr/local/e-mall/{{item}} && ./startapi.sh"
      with_items:
        - api
        - api1
        - api2
#  - name: health check
#    shell: "sleep 50 && curl -L -o /dev/null --connect-timeout 5 -s -w %{http_code} http://localhost:{{item}}/apis/version"
#    with_items:
#      - 8888
#      - 22332
#      - 22333
